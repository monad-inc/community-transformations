name: "Google Cloud Audit Logs to OCSF"
description: "Transforms Google Cloud Audit Logs into OCSF Schema"
author: "Monad"
contributors:
  - "https://github.com/Credgate"
inputs:
  - "google-cloud-logs"
tags:
  - "v1.0.0"
  - "ocsf"
  - "google"
  - "gcp"
  - "audit"
  - "logs"
config:
  operations:
    - operation: "jq"
      arguments:
        key: ""
        query: |
          {
            # Required OCSF Fields
            "category_uid": 6,
            "class_uid": 6003,
            "activity_id": 0,
            "type_uid": 0,
            "time": (.timestamp | fromdateiso8601),
          
            # Severity mapping
            "severity_id": (
              if .severity == "DEFAULT" then 0 
              elif .severity == "DEBUG" then 1 
              elif .severity == "INFO" then 2 
              elif .severity == "NOTICE" then 3 
              elif .severity == "WARNING" then 4 
              elif .severity == "ERROR" then 5 
              elif .severity == "CRITICAL" then 6 
              elif .severity == "ALERT" then 6 
              elif .severity == "EMERGENCY" then 6 
              else 99 
              end
            ),
            "severity": .severity,
          
            # Actor information
            "actor": {
              "user": {
                "ip_addr": .protoPayload.requestMetadata.callerIp,
                "user_agent": .protoPayload.requestMetadata.callerSuppliedUserAgent
              }
            },
          
            # Cloud context
            "cloud": {
              "provider": "GCP",
              "account": {
                "name": .resource.labels.project_id
              },
              "zone": .resource.labels.zone
            },
          
            # API information
            "api": {
              "operation": .protoPayload.methodName,
              "service": {
                "name": .protoPayload.serviceName
              }
            },
          
            # Source endpoint
            "src_endpoint": {
              "ip": .protoPayload.requestMetadata.callerIp
            },
          
            # Resources array
            "resources": [
              {
                "type": .resource.type,
                "name": .protoPayload.resourceName,
                "attributes": {
                  "instance_id": .resource.labels.instance_id,
                  "project_id": .resource.labels.project_id,
                  "zone": .resource.labels.zone
                }
              }
            ],
          
            # Metadata
            "metadata": {
              "labels": [
                "log_name=" + .logName,
                "insert_id=" + .insertId
              ],
              "product": {
                "name": "Google Cloud Platform",
                "vendor_name": "Google"
              },
              "version": "1.0.0"
            },
          
            # Raw data
            "raw_data": (. | tostring)
          }